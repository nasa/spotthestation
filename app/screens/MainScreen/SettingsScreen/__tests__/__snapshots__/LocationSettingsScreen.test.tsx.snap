// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <View
    style={
      {
        "flex": 1,
        "paddingBottom": 172,
      }
    }
  >
    <RCTScrollView
      accessibilityHint="Location settings scrollable us area"
      accessibilityLabel="Location settings scrollable us area"
      accessibilityRole="scrollbar"
      accessible={true}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "paddingBottom": 86,
        }
      }
      scrollEnabled={true}
      style={
        {
          "paddingBottom": 15,
          "paddingHorizontal": 26,
        }
      }
    >
      <View>
        <View
          accessibilityHint="Navigates to the previous screen"
          accessibilityLabel="Back button"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingBottom": 11,
            }
          }
        >
          <View>
            <RCTImageView
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              internal_analyticTag={null}
              resizeMode="contain"
              source={
                [
                  {
                    "height": undefined,
                    "uri": undefined,
                    "width": undefined,
                  },
                ]
              }
              style={
                {
                  "height": 35,
                  "overflow": "hidden",
                  "resizeMode": "contain",
                  "tintColor": "#DEDDDE",
                  "width": 35,
                }
              }
              tintColor="#DEDDDE"
            />
          </View>
          <Text
            allowFontScaling={false}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#DEDDDE",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 26,
                  "lineHeight": 32,
                  "paddingBottom": 0,
                  "paddingLeft": 7,
                  "textAlign": "left",
                },
              ]
            }
          >
            settings.locationSettingsData.backToSettings undefined
          </Text>
        </View>
        <Text
          allowFontScaling={false}
          style={
            [
              {},
              [
                {
                  "fontSize": 23,
                  "lineHeight": 35,
                },
                {
                  "fontFamily": "Helvetica Neue",
                },
                {
                  "color": "#191015",
                },
              ],
              undefined,
              undefined,
              {
                "color": "#DEDDDE",
                "fontFamily": "Helvetica Neue",
                "fontSize": 52,
                "lineHeight": 63,
                "paddingBottom": 35,
                "textAlign": "left",
              },
            ]
          }
        >
          settings.locationSettingsData.generalTitle undefined
        </Text>
        <View
          accessibilityHint="pressable settings item"
          accessibilityLabel="pressable settings item"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "flex-start",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingTop": 23,
              "width": "100%",
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "flex-start",
                  "borderBottomWidth": 2,
                  "borderColor": "#353739",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginLeft": 15,
                  "paddingBottom": 23,
                },
                {
                  "borderBottomWidth": 0,
                },
              ]
            }
          >
            <View>
              <RCTImageView
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                internal_analyticTag={null}
                resizeMode="contain"
                source={
                  [
                    {
                      "height": undefined,
                      "uri": undefined,
                      "width": undefined,
                    },
                  ]
                }
                style={
                  {
                    "height": 35,
                    "overflow": "hidden",
                    "resizeMode": "contain",
                    "tintColor": "#ADADAE",
                    "width": 35,
                  }
                }
                tintColor="#ADADAE"
              />
            </View>
            <View
              style={
                {
                  "flex": 1,
                  "flexDirection": "column",
                  "paddingLeft": 26,
                }
              }
            >
              <Text
                accessibilityHint="settings.locationSettingsData.locationPermission"
                accessibilityLabel="title"
                accessibilityRole="text"
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                numberOfLines={1}
                style={
                  [
                    {},
                    [
                      {
                        "fontSize": 23,
                        "lineHeight": 35,
                      },
                      {
                        "fontFamily": "Helvetica Neue",
                      },
                      {
                        "color": "#191015",
                      },
                    ],
                    undefined,
                    undefined,
                    {
                      "color": "#FFFFFF",
                      "fontFamily": "Helvetica Neue",
                      "fontSize": 35,
                      "lineHeight": 42,
                      "width": "95%",
                    },
                  ]
                }
              >
                settings.locationSettingsData.locationPermission undefined
              </Text>
            </View>
            <View>
              <RCTImageView
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                internal_analyticTag={null}
                resizeMode="contain"
                source={
                  [
                    {
                      "height": undefined,
                      "uri": undefined,
                      "width": undefined,
                    },
                  ]
                }
                style={
                  {
                    "height": 35,
                    "overflow": "hidden",
                    "resizeMode": "contain",
                    "tintColor": "#353739",
                    "width": 35,
                  }
                }
                tintColor="#353739"
              />
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    accessibilityRole="imagebutton"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignSelf": "center",
        "bottom": NaN,
        "position": "absolute",
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#0B3D91",
          "borderRadius": 143,
          "display": "flex",
          "height": 92,
          "justifyContent": "center",
          "overflow": "hidden",
          "position": "relative",
          "width": 92,
        }
      }
    >
      <View
        style={
          [
            {
              "backgroundColor": "transparent",
            },
            [
              {
                "alignItems": "center",
                "backgroundColor": "#1E2022",
                "borderRadius": 143,
                "display": "flex",
                "height": 60,
                "justifyContent": "center",
                "overflow": "hidden",
                "position": "relative",
                "width": 60,
              },
              {
                "backgroundColor": "#0B3D91",
                "height": 92,
                "width": 92,
              },
            ],
          ]
        }
      >
        <ViewManagerAdapter_ExpoBlurView
          proxiedProperties={
            {
              "intensity": 0,
              "tint": "default",
            }
          }
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 40,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#DEDDDE",
                "width": 40,
              }
            }
            tintColor="#DEDDDE"
          />
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
</div>
`;
