// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsScreen renders correctly 1`] = `
<div>
  <View
    style={
      [
        {
          "left": 26,
          "position": "absolute",
          "zIndex": 9,
        },
        {
          "top": 55,
        },
      ]
    }
  >
    <Text
      accessibilityHint="header"
      accessibilityLabel="header"
      accessibilityRole="text"
      accessible={true}
      allowFontScaling={false}
      style={
        [
          {},
          [
            {
              "fontSize": 23,
              "lineHeight": 35,
            },
            {
              "fontFamily": "Helvetica Neue",
            },
            {
              "color": "#191015",
            },
          ],
          undefined,
          undefined,
          {
            "color": "#DEDDDE",
            "fontFamily": "Helvetica Neue",
            "fontSize": 52,
            "lineHeight": 63,
          },
        ]
      }
    >
      settings.header undefined
    </Text>
  </View>
  <View
    style={
      {
        "flex": 1,
        "marginTop": 215,
        "paddingHorizontal": 52,
      }
    }
  >
    <View
      accessibilityHint="pressable settings item"
      accessibilityLabel="pressable settings item"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 23,
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "borderBottomWidth": 2,
              "borderColor": "#353739",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginLeft": 15,
              "paddingBottom": 23,
            },
            false,
          ]
        }
      >
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 35,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "paddingLeft": 26,
            }
          }
        >
          <Text
            accessibilityHint="settings.locationSettings"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 35,
                  "lineHeight": 42,
                  "width": "95%",
                },
              ]
            }
          >
            settings.locationSettings undefined
          </Text>
        </View>
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#353739",
                "width": 35,
              }
            }
            tintColor="#353739"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityHint="pressable settings item"
      accessibilityLabel="pressable settings item"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 23,
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "borderBottomWidth": 2,
              "borderColor": "#353739",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginLeft": 15,
              "paddingBottom": 23,
            },
            false,
          ]
        }
      >
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 35,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "paddingLeft": 26,
            }
          }
        >
          <Text
            accessibilityHint="settings.notificationSettings"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 35,
                  "lineHeight": 42,
                  "width": "95%",
                },
              ]
            }
          >
            settings.notificationSettings undefined
          </Text>
        </View>
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#353739",
                "width": 35,
              }
            }
            tintColor="#353739"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityHint="pressable settings item"
      accessibilityLabel="pressable settings item"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 23,
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "borderBottomWidth": 2,
              "borderColor": "#353739",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginLeft": 15,
              "paddingBottom": 23,
            },
            false,
          ]
        }
      >
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 35,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "paddingLeft": 26,
            }
          }
        >
          <Text
            accessibilityHint="settings.termsAndConditions"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 35,
                  "lineHeight": 42,
                  "width": "95%",
                },
              ]
            }
          >
            settings.termsAndConditions undefined
          </Text>
        </View>
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#353739",
                "width": 35,
              }
            }
            tintColor="#353739"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityHint="pressable settings item"
      accessibilityLabel="pressable settings item"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 23,
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "borderBottomWidth": 2,
              "borderColor": "#353739",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginLeft": 15,
              "paddingBottom": 23,
            },
            false,
          ]
        }
      >
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 35,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "paddingLeft": 26,
            }
          }
        >
          <Text
            accessibilityHint="settings.contactUs"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 35,
                  "lineHeight": 42,
                  "width": "95%",
                },
              ]
            }
          >
            settings.contactUs undefined
          </Text>
        </View>
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#353739",
                "width": 35,
              }
            }
            tintColor="#353739"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityHint="pressable settings item"
      accessibilityLabel="pressable settings item"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 23,
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "borderBottomWidth": 2,
              "borderColor": "#353739",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginLeft": 15,
              "paddingBottom": 23,
            },
            false,
          ]
        }
      >
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 35,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "paddingLeft": 26,
            }
          }
        >
          <Text
            accessibilityHint="settings.calibrateCompass"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 35,
                  "lineHeight": 42,
                  "width": "95%",
                },
              ]
            }
          >
            settings.calibrateCompass undefined
          </Text>
        </View>
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#353739",
                "width": 35,
              }
            }
            tintColor="#353739"
          />
        </View>
      </View>
    </View>
    <View
      accessibilityHint="pressable settings item"
      accessibilityLabel="pressable settings item"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 23,
          "width": "100%",
        }
      }
    >
      <View
        style={
          [
            {
              "alignItems": "flex-start",
              "borderBottomWidth": 2,
              "borderColor": "#353739",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginLeft": 15,
              "paddingBottom": 23,
            },
            false,
          ]
        }
      >
        <View>
          <RCTImageView
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            internal_analyticTag={null}
            resizeMode="contain"
            source={
              [
                {
                  "height": undefined,
                  "uri": undefined,
                  "width": undefined,
                },
              ]
            }
            style={
              {
                "height": 35,
                "overflow": "hidden",
                "resizeMode": "contain",
                "tintColor": "#ADADAE",
                "width": 35,
              }
            }
            tintColor="#ADADAE"
          />
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "paddingLeft": 26,
            }
          }
        >
          <Text
            accessibilityHint="settings.language"
            accessibilityLabel="title"
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              [
                {},
                [
                  {
                    "fontSize": 23,
                    "lineHeight": 35,
                  },
                  {
                    "fontFamily": "Helvetica Neue",
                  },
                  {
                    "color": "#191015",
                  },
                ],
                undefined,
                undefined,
                {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 35,
                  "lineHeight": 42,
                  "width": "95%",
                },
              ]
            }
          >
            settings.language undefined
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={
            {
              "flex": 1,
              "height": 43,
              "justifyContent": "center",
              "overflow": "hidden",
            }
          }
        >
          <View
            accessibilityLabel="language select"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 35,
                "justifyContent": "space-between",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "flex": 1,
                    "fontSize": 16,
                  },
                  [
                    {
                      "color": "#DEDDDE",
                      "flex": 1,
                      "fontFamily": "Helvetica Neue",
                      "fontSize": 26,
                      "marginHorizontal": 17,
                      "paddingHorizontal": 0,
                      "paddingVertical": 0,
                      "textAlign": "right",
                      "textAlignVertical": "center",
                    },
                    {
                      "color": "#DEDDDE",
                    },
                  ],
                  {},
                ]
              }
            >
              English
            </Text>
            <View
              style={
                {
                  "alignItems": "center",
                  "height": 80,
                  "justifyContent": "center",
                }
              }
            >
              <RCTImageView
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                internal_analyticTag={null}
                resizeMode="contain"
                source={
                  [
                    {
                      "height": undefined,
                      "uri": undefined,
                      "width": undefined,
                    },
                  ]
                }
                style={
                  {
                    "height": 40,
                    "overflow": "hidden",
                    "resizeMode": "contain",
                    "tintColor": "#ADADAE",
                    "width": 40,
                  }
                }
                tintColor="#ADADAE"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    useNativeDriverForBackdrop={true}
    visible={false}
  />
</div>
`;
